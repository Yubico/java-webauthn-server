plugins {
  id 'java-library'
  id 'scala'
  id 'maven-publish'
  id 'signing'
  id 'info.solidsoft.pitest'
  id 'io.github.cosmicsilence.scalafix'
}

description = 'Yubico WebAuthn attestation subsystem'

project.ext.publishMe = true

sourceCompatibility = 1.8
targetCompatibility = 1.8

evaluationDependsOn(':webauthn-server-core')

sourceSets {
  integrationTest {
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}

configurations {
  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
  api(platform(rootProject))

  api(
    project(':webauthn-server-core'),
  )

  implementation(
    project(':yubico-util'),
    'com.google.guava:guava',
    'com.fasterxml.jackson.core:jackson-databind',
    'org.bouncycastle:bcprov-jdk15on',
    'org.slf4j:slf4j-api',
  )

  testImplementation(
    project(':webauthn-server-core').sourceSets.test.output,
    project(':yubico-util-scala'),
    'com.fasterxml.jackson.datatype:jackson-datatype-jdk8',
    'junit:junit',
    'org.bouncycastle:bcpkix-jdk15on',
    'org.eclipse.jetty:jetty-server',
    'org.mockito:mockito-core',
    'org.scala-lang:scala-library',
    'org.scalacheck:scalacheck_2.13',
    'org.scalatest:scalatest_2.13',
    'uk.org.lidalia:slf4j-test',
  )

  testImplementation('org.slf4j:slf4j-api') {
    version {
      strictly '[1.7.25,1.8-a)' // Pre-1.8 version required by slf4j-test
    }
  }
}

tasks.register('integrationTest', Test) {
  description = 'Runs integration tests.'
  group = 'verification'

  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  shouldRunAfter test
  check.dependsOn it

  // Required for processing CRL distribution points extension
  systemProperty 'com.sun.security.enableCRLDP', 'true'
}

jar {
  manifest {
    attributes([
      'Implementation-Id': 'java-webauthn-server-attestation',
      'Implementation-Title': project.description,
      'Implementation-Version': project.version,
      'Implementation-Vendor': 'Yubico',
      'Git-Commit': getGitCommitOrUnknown(),
    ])
  }
}

pitest {
  pitestVersion = '1.4.11'

  timestampedReports = false
  outputFormats = ['XML', 'HTML']

  avoidCallsTo = [
          'java.util.logging',
          'org.apache.log4j',
          'org.slf4j',
          'org.apache.commons.logging',
          'com.google.common.io.Closeables',
  ]
}
